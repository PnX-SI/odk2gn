name: pytest
on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    name: Test on ubuntu latest with postgres 15
    
    services:
      postgres:
        image: postgis/postgis:15-3.5
        env:
          POSTGRES_DB: geonature2db
          POSTGRES_PASSWORD: geonatpasswd
          POSTGRES_USER: geonatadmin
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - name: Add postgis_raster database extension
      if: ${{ matrix.postgis-version >= 3 }}
      run: |
        psql -h localhost -U geonatadmin -d geonature2db -tc 'CREATE EXTENSION "postgis_raster";'
      env:
        PGPASSWORD: geonatpasswd
    - name: Add database extensions
      run: |
        psql -h localhost -U geonatadmin -d geonature2db -tc 'CREATE EXTENSION "hstore";'
        psql -h localhost -U geonatadmin -d geonature2db -tc 'CREATE EXTENSION "uuid-ossp";'
        psql -h localhost -U geonatadmin -d geonature2db -tc 'CREATE EXTENSION "pg_trgm";'
        psql -h localhost -U geonatadmin -d geonature2db -tc 'CREATE EXTENSION "unaccent";'
      env:
        PGPASSWORD: geonatpasswd
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install \
          -e ..[tests] \
          -r requirements-dev.txt
      working-directory: ./dependencies/GeoNature/backend
    - name: Install database
      run: |
        geonature db upgrade geonature@head -x local-srid=2154
        geonature db autoupgrade -x local-srid=2154
        geonature taxref import-v15 --skip-bdc-statuts
        geonature db upgrade geonature-samples@head
        geonature db upgrade nomenclatures_taxonomie_data@head
        geonature db upgrade ref_geo_fr_departments@head
        geonature db upgrade ref_geo_fr_municipalities@head
        geonature db upgrade ref_geo_inpn_grids_10@head
      env:
        GEONATURE_CONFIG_FILE: dependencies/GeoNature/config/test_config.toml
    - name: Create correct config file
      run : |
        cp geonature_config.toml.sample geonature_config.toml
      working-directory: dependencies/GeoNature/config/
    - name: Install monitoring
      run: |
        pip install --editable dependencies/gn_module_monitoring
      env:
        GEONATURE_CONFIG_FILE: dependencies/GeoNature/config/test_config.toml
    - name: Install core modules database
      run: |
        geonature upgrade-modules-db
      env:
        GEONATURE_CONFIG_FILE: dependencies/GeoNature/config/test_config.toml
    - name: Move odk2gn config file
      run: |
        cp odk2gn_config.toml.example dependencies/GeoNature/config/odk2gn_config.toml
      working-directory : .
    - name: Install ODK2GN
      run : |
        pip install -e . -r requirements.txt
      working-directory : .
    - name: Test with pytest
      run: |
        pytest -v --cov --cov-report xml
      env:
        GEONATURE_CONFIG_FILE: dependencies/GeoNature/config/test_config.toml